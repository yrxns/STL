迭代器种类                      能力                        提供者

Output迭代器                    向前写入                    Ostream, inserter
Input迭代器                     向前读取一次                Istream
Forward迭代器                   向前读取                    Forward list, unordered containers
Bidirectional迭代器             向前和向后读取              List, set, multiset, map, multimap
Random-access迭代器             以随机访问方式读取          Array, vector, deque, string, C-style array


Output迭代器的操作
*iter = val                     将val写至迭代器所指位置
++iter                          向前步进(step forward),返回新位置
iter++                          向前步进(step forward),返回旧位置
TYPE(iter)                      赋值迭代器(copy 构造函数)


Iutput迭代器的操作
*iter = val                     读取实际元素
iter->member                    读取实际元素的成员
++iter                          向前步进(step forward),返回新位置
iter++                          向前步进(step forward),返回旧位置
iter1 == iter2                  判断两个迭代器是否相等
iter1 != iter2                  判断两个迭代器是否不等
TYPE(iter)                      赋值迭代器(copy 构造函数)


Forward(前向)迭代器的操作
*iter = val                     访问实际元素
iter->member                    访问实际元素的成员
++iter                          向前步进(返回新位置)
iter++                          向前步进(返回旧位置)
iter1 == iter2                  判断两个迭代器是否相等
iter1 != iter2                  判断两个迭代器是否不等
TYPE()                          创建迭代器(default构造函数)
TYPE(iter)                      赋值迭代器(copy 构造函数)
iter1 == iter2                  对迭代器赋值


Bidirectional(双向)迭代器的操作(在forward迭代器的基础上增加了回头迭代能力)
--iter                          步退(返回新位置)
iter--                          步退(返回旧位置)


Random-Access(随机访问)迭代器
iter[n]                         访问索引位置为n的元素
iter += n                       前进n个元素(如果n是负数，则改为回退)
iter -= n                       回退n个元素(如果n是负数，则改为前进)
iter + n                        返回iter之后的第n个元素
iter - n                        返回iter之前的第n个元素
iter1 - iter2                   返回iter1和iter2之间的距离
iter1 < iter2                   判断iter1是否在iter2之前
iter1 > iter2                   判断iter1是否在iter2之后
iter1 <= iter2                  判断iter1是否不在iter2之后
iter1 >= iter2                  判断iter1是否不在iter2之前



迭代器相关辅助函数
#include <iterator>
void advance(InputIterator& pos, Dist n)                        令名为pos的input迭代器前进(或后退)n个元素

ForwardIterator next(ForwardIterator pos)                       令forward迭代器pos前进1或n个位置
ForwardIterator next(ForwardIterator pos, Dist n)

BidirectionalIterator next(BidirectionalIterator pos)           n可为负值
BidirectionalIterator next(BidirectionalIterator pos, Dist n)

Dist distance(InputIterator pos1, InputIterator pos2)           返回两个input迭代器pos1和pos2之间的距离，两个迭代器必须指向同一个容器

#include <algorithm>
void iter_swap(ForwardIterator1 pos1, ForwardIterator2 pos2)    交换迭代器pos1和pos2所指的值，迭代器的类型不必相同，但其所指的两个值必须可以相互赋值




Input迭代器的种类
